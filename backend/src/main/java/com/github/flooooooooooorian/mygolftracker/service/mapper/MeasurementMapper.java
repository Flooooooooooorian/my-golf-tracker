package com.github.flooooooooooorian.mygolftracker.service.mapper;

import com.github.flooooooooooorian.mygolftracker.model.NormalizedStrokeMeasurement;
import com.github.flooooooooooorian.mygolftracker.model.StrokeMeasurement;
import com.github.flooooooooooorian.mygolftracker.model.api.trackman.TrackmanNormalizedStrokeMeasurement;
import com.github.flooooooooooorian.mygolftracker.model.api.trackman.TrackmanStrokeMeasurement;

public class MeasurementMapper {

    public static StrokeMeasurement map(TrackmanStrokeMeasurement trackmanStrokeMeasurement) {
        return StrokeMeasurement.measurementBuilder()
                .id(trackmanStrokeMeasurement.getId())
                .time(trackmanStrokeMeasurement.getTime())
                .kind(trackmanStrokeMeasurement.getKind())
                .teePosition(trackmanStrokeMeasurement.getTeePosition())
                .playerDexterity(trackmanStrokeMeasurement.getPlayerDexterity())
                .dynamicLie(trackmanStrokeMeasurement.getDynamicLie())
                .impactOffset(trackmanStrokeMeasurement.getImpactOffset())
                .impactHeight(trackmanStrokeMeasurement.getImpactHeight())
                .attackAngle(trackmanStrokeMeasurement.getAttackAngle())
                .launchDirection(trackmanStrokeMeasurement.getLaunchDirection())
                .ballSpeed(trackmanStrokeMeasurement.getBallSpeed())
                .clubPath(trackmanStrokeMeasurement.getClubPath())
                .clubSpeed(trackmanStrokeMeasurement.getClubSpeed())
                .launchAngle(trackmanStrokeMeasurement.getLaunchAngle())
                .smashFactor(trackmanStrokeMeasurement.getSmashFactor())
                .spinAxis(trackmanStrokeMeasurement.getSpinAxis())
                .spinRate(trackmanStrokeMeasurement.getSpinRate())
                .swingDirection(trackmanStrokeMeasurement.getSwingDirection())
                .swingPlane(trackmanStrokeMeasurement.getSwingPlane())
                .swingRadius(trackmanStrokeMeasurement.getSwingRadius())
                .dPlaneTilt(trackmanStrokeMeasurement.getDPlaneTilt())
                .lowPointDistance(trackmanStrokeMeasurement.getLowPointDistance())
                .maxHeight(trackmanStrokeMeasurement.getMaxHeight())
                .carry(trackmanStrokeMeasurement.getCarry())
                .total(trackmanStrokeMeasurement.getTotal())
                .carrySide(trackmanStrokeMeasurement.getCarrySide())
                .totalSide(trackmanStrokeMeasurement.getTotalSide())
                .landingAngle(trackmanStrokeMeasurement.getLandingAngle())
                .hangTime(trackmanStrokeMeasurement.getHangTime())
                .lastData(trackmanStrokeMeasurement.getLastData())
                .curve(trackmanStrokeMeasurement.getCurve())
                .ballTrajectory(trackmanStrokeMeasurement.getBallTrajectory().stream()
                        .map(TrajectoryMapper::map)
                        .toList())
                .clubTrajectory(trackmanStrokeMeasurement.getClubTrajectory().stream()
                        .map(TrajectoryMapper::map)
                        .toList())
                .lowPointside(trackmanStrokeMeasurement.getLowPointside())
                .swingRadius(trackmanStrokeMeasurement.getSwingRadius())
                .build();
    }

    public static NormalizedStrokeMeasurement map(TrackmanNormalizedStrokeMeasurement trackmanNormalizedStrokeMeasurement) {
        return NormalizedStrokeMeasurement.measurementBuilder()
                .id(trackmanNormalizedStrokeMeasurement.getId())
                .time(trackmanNormalizedStrokeMeasurement.getTime())
                .kind(trackmanNormalizedStrokeMeasurement.getKind())
                .teePosition(trackmanNormalizedStrokeMeasurement.getTeePosition())
                .playerDexterity(trackmanNormalizedStrokeMeasurement.getPlayerDexterity())
                .dynamicLie(trackmanNormalizedStrokeMeasurement.getDynamicLie())
                .impactOffset(trackmanNormalizedStrokeMeasurement.getImpactOffset())
                .impactHeight(trackmanNormalizedStrokeMeasurement.getImpactHeight())
                .attackAngle(trackmanNormalizedStrokeMeasurement.getAttackAngle())
                .launchDirection(trackmanNormalizedStrokeMeasurement.getLaunchDirection())
                .ballSpeed(trackmanNormalizedStrokeMeasurement.getBallSpeed())
                .clubPath(trackmanNormalizedStrokeMeasurement.getClubPath())
                .clubSpeed(trackmanNormalizedStrokeMeasurement.getClubSpeed())
                .launchAngle(trackmanNormalizedStrokeMeasurement.getLaunchAngle())
                .smashFactor(trackmanNormalizedStrokeMeasurement.getSmashFactor())
                .spinAxis(trackmanNormalizedStrokeMeasurement.getSpinAxis())
                .spinRate(trackmanNormalizedStrokeMeasurement.getSpinRate())
                .swingDirection(trackmanNormalizedStrokeMeasurement.getSwingDirection())
                .swingPlane(trackmanNormalizedStrokeMeasurement.getSwingPlane())
                .swingRadius(trackmanNormalizedStrokeMeasurement.getSwingRadius())
                .dPlaneTilt(trackmanNormalizedStrokeMeasurement.getDPlaneTilt())
                .lowPointDistance(trackmanNormalizedStrokeMeasurement.getLowPointDistance())
                .maxHeight(trackmanNormalizedStrokeMeasurement.getMaxHeight())
                .carry(trackmanNormalizedStrokeMeasurement.getCarry())
                .total(trackmanNormalizedStrokeMeasurement.getTotal())
                .carrySide(trackmanNormalizedStrokeMeasurement.getCarrySide())
                .totalSide(trackmanNormalizedStrokeMeasurement.getTotalSide())
                .landingAngle(trackmanNormalizedStrokeMeasurement.getLandingAngle())
                .hangTime(trackmanNormalizedStrokeMeasurement.getHangTime())
                .lastData(trackmanNormalizedStrokeMeasurement.getLastData())
                .curve(trackmanNormalizedStrokeMeasurement.getCurve())
                .ballTrajectory(trackmanNormalizedStrokeMeasurement.getBallTrajectory().stream()
                        .map(TrajectoryMapper::map)
                        .toList())
                .clubTrajectory(trackmanNormalizedStrokeMeasurement.getClubTrajectory().stream()
                        .map(TrajectoryMapper::map)
                        .toList())
                .landingHeight(trackmanNormalizedStrokeMeasurement.getLandingHeight())
                .withBallAndClub(trackmanNormalizedStrokeMeasurement.getWithBallAndClub())
                .build();
    }
}
